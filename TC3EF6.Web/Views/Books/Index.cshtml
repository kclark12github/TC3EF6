@*@model PagedList.IPagedList<TC3EF6.Domain.Classes.Stash.Book>*@
@model IEnumerable<TC3EF6.Domain.Classes.Stash.Book>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    /**/

    ViewBag.Title = "Index";
}



<h2>Index</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @using (Html.BeginForm())
    {
        <p>
            Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { style = "color:black" })
            <input type="submit" value="Search" style="color:black"/>
        </p>
    }
    @if (Model.Count > 0)
    {
        var header = Model[0];
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(model => header.ID)</th>
                <th>@Html.DisplayNameFor(model => header.OID)</th>
                <th>@Html.DisplayNameFor(model => header.AlphaSort)</th>
                <th>@Html.DisplayNameFor(model => header.WishList)</th>
                <th>@Html.DisplayNameFor(model => header.Title)</th>
                <th>@Html.DisplayNameFor(model => header.Author)</th>
                <th>@Html.DisplayNameFor(model => header.MediaFormat)</th>
                <th>@Html.DisplayNameFor(model => header.ISBN)</th>
                <th>@Html.DisplayNameFor(model => header.Cataloged)</th>
                <th>@Html.DisplayNameFor(model => header.Location.Name)</th>
                <th>@Html.DisplayNameFor(model => header.DateInventoried)</th>
                <th>@Html.DisplayNameFor(model => header.Value)</th>
                <th>@Html.DisplayNameFor(model => header.DateVerified)</th>
                <th>@Html.DisplayNameFor(model => header.Price)</th>
                <th>@Html.DisplayNameFor(model => header.DatePurchased)</th>
                <th>@Html.DisplayNameFor(model => header.Misc)</th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <th>@Html.DisplayFor(model => item.ID)</th>
                    <th>@Html.DisplayFor(model => item.OID)</th>
                    <th>@Html.DisplayFor(model => item.AlphaSort)</th>
                    <th><label style="color:black">@Html.DisplayFor(model => item.WishList)</label></th>
                    <th>@Html.DisplayFor(model => item.Title)</th>
                    <th>@Html.DisplayFor(model => item.Author)</th>
                    <th>@Html.DisplayFor(model => item.MediaFormat)</th>
                    <th>@Html.DisplayFor(model => item.ISBN)</th>
                    <th><label style="color:black">@Html.DisplayFor(model => item.Cataloged)</label></th>
                    <th>@Html.DisplayFor(model => item.Location.Name)</th>
                    <th>@Html.DisplayFor(model => item.DateInventoried)</th>
                    <th>@Html.DisplayFor(model => item.Value)</th>
                    <th>@Html.DisplayFor(model => item.DateVerified)</th>
                    <th>@Html.DisplayFor(model => item.Price)</th>
                    <th>@Html.DisplayFor(model => item.DatePurchased)</th>
                    <th>@Html.DisplayFor(model => item.Misc)</th>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }
        </table>
    }
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, currentFilter = ViewBag.CurrentFilter }))*@

<div class="row" style="color:black;">
    <div class="col-md-12">
        <div class="panel panel-primary list-panel" id="list-panel">
            <div class="panel-heading list-panel-heading">
                <h1 class="panel-title list-panel-title">Books</h1>
                <button type="button" class="btn btn-default btn-md" data-toggle="modal" data-target="#advancedSearchModal" id="advancedsearch-button">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Advanced Search
                </button>
            </div>
            <div class="panel-body">
                <table id="books-data-table" class="table table-striped table-bordered" style="width:100%"></table>
            </div>
        </div>
    </div>
</div>

@Html.Action("AdvancedSearch")

@section Scripts
{
    <script type="text/javascript">
        var bookListVM;
        $(function () {
            bookListVM = {
                dt: null,
                init: function () {
                    dt = $('#books-data-table').DataTable({
                        "serverSide": true,
                        "processing": true,
                        "ajax": {
                            "url": "@Url.Action("Get","Books")",
                            "data": function (data) {
                                data.AlphaSort = $("#AlphaSort").val();
                                data.Title = $("#Title").val();
                                data.Author = $("#Author").val();
                                data.Media = $("#Media").val();
                                data.ISBN = $("#ISBN").val();
                                data.Location = $("#Location").val();
                            }
                        },
                        "columns": [
                            { "title": "AlphaSort", "data": "AlphaSort", "searchable": true, "defaultContent": "<i>Null</i>" },
                            { "title": "Title", "data": "Title", "searchable": true, "defaultContent": "<i>Null</i>" },
                            { "title": "Author", "data": "Author", "searchable": true, "defaultContent": "<i>Null</i>" },
                            { "title": "Media", "data": "MediaFormat", "searchable": true, "defaultContent": "<i>Null</i>" },
                            { "title": "ISBN", "data": "ISBN", "searchable": true, "defaultContent": "<i>Null</i>" },
                            { "title": "Location", "data": "Location", "searchable": true, "defaultContent": "<i>Null</i>" }
                        ],
                        "displayStart": 25, "pageLength": 25,
                        "lengthMenu": [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
                    });
                }
            }

            // Advanced Search Modal Search button click handler 
            $('#btnPerformAdvancedSearch').on("click", bookListVM.refresh);

            // initialize the datatables
            bookListVM.init();
        });
    </script>
}